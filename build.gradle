plugins {
    id "com.stehno.gradle.webpreview" version "0.3.0"
    id 'java'
    id 'org.asciidoctor.convert' version '1.5.3'
    id 'com.stehno.gradle.site' version '0.0.3'
    id "io.github.gradle-nexus.publish-plugin" version "1.3.0"
}

nexusPublishing {
    repositories {
        sonatype()
    }
}

group = 'com.ainrif.fg-net'
version = '1.0.2'

allprojects {
    repositories {
        mavenLocal()
        mavenCentral()
    }

    configurations {
        all {
            it.exclude group: 'commons-logging'
            it.exclude group: 'org.apache.logging.log4j'
            it.exclude group: 'org.slf4j', module: 'slf4j-log4j12'
        }
    }
}

subprojects {
    apply plugin: 'groovy'

    group = project.parent.group
    version = project.parent.version

    sourceCompatibility = JavaVersion.VERSION_17
    targetCompatibility = JavaVersion.VERSION_17

    dependencies {
        // optionals
        [
                'com.opencsv:opencsv:3.8',
                'org.apache.groovy:groovy:4.0.18',
                'org.apache.groovy:groovy-json:4.0.18',
                'org.apache.groovy:groovy-xml:4.0.18',
                'org.jsoup:jsoup:1.9.2',
                'net.sourceforge.nekohtml:nekohtml:1.9.22',
                'com.fasterxml.jackson.core:jackson-databind:2.8.1',
                'javax.mail:javax.mail-api:1.5.6',
                'com.sun.mail:javax.mail:1.5.6'
        ].each { opt ->
            compileOnly(opt)
            testImplementation(opt)
        }

        testImplementation 'org.spockframework:spock-core:2.3-groovy-4.0'

        testImplementation 'com.stehno.ersatz:ersatz:1.9.0:safe@jar'//1.5.0'
        testImplementation 'org.hamcrest:hamcrest-library:1.3'

        testImplementation 'org.slf4j:jcl-over-slf4j:1.7.25'
        testImplementation 'ch.qos.logback:logback-classic:1.2.3'

        testImplementation 'junit:junit:4.13.2'
    }

    test {
        systemProperty 'test.proxy.support', 'false'
        reports.html.enabled = true
        maxParallelForks = 4
    }

    tasks.withType(JavaCompile) {
        options.compilerArgs << "-Xlint:unchecked" << "-Xlint:deprecation"
    }
}

asciidoctor {
    options doctype: 'book'

    backends = ['html5']

    attributes 'source-highlighter': 'coderay',
            'coderay-linenums-mode': 'table',
            icon: 'font',
            linkattrs: true,
            encoding: 'utf-8'
}

tasks.site.dependsOn = [
        'build', 'core:build', 'apache-provider:build',
        'asciidoctor'
]

site {
    siteUrl = 'https://http-builder-ng.github.io/http-builder-ng/'

    assetDir('core/build/reports', into: 'core', external: true)
    assetDir('apache-provider/build/reports', into: 'apache', external: true)

    versionedFile 'src/docs/asciidoc/index.adoc'
    versionedFile 'src/docs/asciidoc/configuration.adoc'
    versionedFile 'src/docs/asciidoc/examples.adoc'

    testedPath '/guide/html5/index.html'
}

task publishSite(type: GradleBuild, group: 'Publishing', description: 'Publishes the documentation web site.', dependsOn: ['site']) {
    buildFile = 'publish.gradle'
    tasks = ['publishGhPages']
}
